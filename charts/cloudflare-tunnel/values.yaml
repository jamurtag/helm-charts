# Default values for cloudflare-tunnel.

# Cloudflare parameters.
cloudflare:
  # Tunnel name
  tunnelName: ""
  # Tunnel config mode - local or cloudflare
  # 'local' mode requires cloudflared configuration and credentials be supplied locally, via configMap
  # and secret volumes mounts respectively. 'cloudflare' mode requires configuration via the
  # Cloudflare API (i.e., via the Terraform cloudflare_tunnel_config resource) and tunnel runtime
  # authentication is passed via the token returned from tunnel creation.
  tunnelMode: local
  # Tunnel token used to authenticate tunnel startup in cloudflare mode
  # Cannot be read from a secret into an env var as cloudflared uses a distroless image
  tunnelToken: ""
  # If true, turn on WARP routing for TCP, UDP, ICMP
  enableWarp: false
  # Protocol used to connect to Cloudflare network
  protocol: auto
  # Standard loglevel
  logLevel: info
  # Transport protocol loglevel
  transportLogLevel: warn
  # Define tunnel ingress rules - only applicable for local configuration mode
  # see https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/configuration-file/ingress
  ingress: []
    # The first rule proxies traffic to the httpbin sample service named web-server at port 80
    # - hostname: tunnel.example.com
    #  service: http://web-service:80
    # This rule sends traffic to the built-in hello-world HTTP server. This can help debug connectivity
    # issues. If hello.example.com resolves and tunnel.example.com does not, then the problem is
    # in the connection from cloudflared to your local service, not from the internet to cloudflared.
    # - hostname: hello.example.com
    #   service: hello_world

image:
  repository: cloudflare/cloudflared
  pullPolicy: IfNotPresent
  # If supplied, this overrides "appVersion"
  tag: ""

replicaCount: 2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Kubernetes secret must be created externally
secretName: cloudflare-tunnel

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# Security items common to everything in the pod.  Here we require that it
# does not run as the user defined in the image, literally named "nonroot".
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532

# Security items for one container. We lock it down.
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 
  maxUnavailable: 

# Priority Class
priorityClassName: ""

# Metrics
metrics:
  podMonitor:
    enabled: false
    namespace:
    additionalLabels: {}
    scrapeInterval: 60s

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

# Default affinity is to spread out over nodes; use this to override.
affinity: {}
